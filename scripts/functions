#'del' functions
no_param () {

	if [[ $# -lt 1 ]]; then
		del --help
		return 1
	else
		return 69
	fi
}

recycle () {

        for i in $@; do
            if [[ -f $i ]]; then
				file_name=$(basename $i)
				file_path=$(realpath $i)

				mv $i /recyclebin/$file_name

				if [[ $? -ne 0 ]]; then
					echo "Cannot recycle $file_name. Aborted."
				else
					log_write "recycle"
					count=$((count + 1))
					echo "Recycling $i..."
				fi
            
			else
                echo "File $i does not exist! Skipping..."
            fi
        done
	echo
        echo "A total of $count files have been recycled and now are located at /recyclebin" 
	echo "Please use 'auditrash' to manage /recyclebin and check the logs generated"
}

force_remove () {

	for i in $@; do
		if [[ -f $i ]]; then
			file_path=$(realpath $i)
			file_name=$(basename $file_path)

			rm -fr $i

			if [[ $? -ne 0 ]]; then
				echo "Cannot remove $file_name. Aborted."
            else
				log_write "removal"
                count=$((count + 1))
			fi

			echo "Removing file $file_path..."
		else
		echo "File $i does not exist! Skipping..."
		fi
	done

	echo
	echo "A total of $count files have been deleted"

}

view_help () {

	echo "Usage: del [OPTION]... FILE... [FILE]..."
	echo "REMOVE or RECYCLE files to /recyclebin, generating log files"
	echo
	echo "  -f		force remove all the selected files and generate a log"
	echo "  -r		recycle selected files to /recyclebin and generate a log"
	echo
	echo "By default, ommiting the control parameter, run -r"
	echo "Manage /recyclebin files and check logs generated by running 'auditrash'"
	echo "AUTHOR: github.com/dam6"

}

#'auditrash' functions
log_write () {

	echo $1 $(date +%d/%m/%Y) $(date +%H.%M) "$file_path" "$USER" | awk 'BEGIN { OFS=":" } { print $1,$2,$3,$4,$5 }' >> /auditrash/logs/current.log
}

list_recyclebin () {

	for i in /recyclebin/*; do
		if [[ $i == "/recyclebin/*" ]]; then echo "/recyclebin is empty! Use 'del' to start recycling."; break; fi

            file_name=$(basename $i)
			file_path=$(grep $file_name /auditrash/logs/current.log | awk 'BEGIN {FS=":"} {print $4}')
            echo $file_name $file_path | awk 'BEGIN {OFS=" <-- "} {print $1,$2}'
        done
}

info () {

	if [[ -f /recyclebin/$file_name ]]; then
		echo "This file is $(file /recyclebin/$file_name | awk 'BEGIN {FS=": "} {print $2}')"
		ls -l /recyclebin/$file_name | awk '{print "Permissions: " $1 "\n" "Owner: " $3 "\n" "Group: " $4 "\n" "Edited by last time: " $7,$6 " at " $8 "\n" "Inodes: " $2}'
		echo "Size: "$(du -h /recyclebin/$file_name | awk '{print $1}')
	else
		echo "The file $file_name does not exist at /recyclebin"
	fi
}

restore_file () {

	if [[ -f /recyclebin/$file_name ]]; then
		file_path=$(tac /auditrash/logs/current.log | awk ' BEGIN {FS=":"} {print $4}' | grep -m 1 ".*/$file_name$")

		mv /recyclebin/$file_name $file_path
		log_write "restored" $file_path

		echo "Restoring file $file_name to its original route..."
		echo "Completed! File $file_name is now located at $file_path again"
		echo
	else
		echo "File $file_name does not exist at /recyclebin. Skipping..."
		echo
	fi
}

wipe_recyclebin () {

	for i in /recyclebin/*; do
		if [[ $i == "/recyclebin/*" ]]; then echo "/recyclebin is empty! Use 'del' to start recycling."; break; fi

		file_path=$i
		log_write "removal(wipe)" $file_path
		file_name=$(basename $i)

		rm -fr $i
	done
}

restore_by_extension () {

	ls /recyclebin | grep -q ".*\.$extension$"
	if [[ $? -ne 0 ]]; then
		echo "Any file at /recyclebin has the extension .$extension"
		echo
	else
		for i in $(ls /recyclebin | grep ".*\.$extension$"); do 
			file_name=$i
			count=$((count + 1))
			
			restore_file $file_name
		done
		echo "A total of $count files with .$extension extension have been restored to its original route"
	fi
}

check_log () {

	PS3="Choose an option 1-$(ls /auditrash/logs/* | wc -l): "
	select option in $(ls /auditrash/logs/*); do
		echo
		cat $option
		break
	done
}

#Created by github.com/dam6
